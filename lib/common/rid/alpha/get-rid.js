"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=getRID;var _debug=_interopRequireDefault(require("debug"));var _boom=_interopRequireDefault(require("@hapi/boom"));var _master=require("@modernpoacher/zashiki-transport/lib/stores/components/route-list/master");var _maps=require("@modernpoacher/zashiki-transport/lib/maps");var _caches=require("@modernpoacher/zashiki-transport/lib/caches");var _exception=require("../../exception");const routeListMaster=new _master.RouteListMaster();const log=(0,_debug.default)('zashiki:common:rid:alpha:get-rid');log('`getRID` is awake');async function getRID({pre:{zid}={},state={},params={}}){log('getRID');const{aid}=await(0,_caches.getAlphaFromCache)(await(0,_maps.mapAlphaStage)(params));const routeList=routeListMaster.use(zid);const resource={alpha:aid};if(await routeList.hasAlpha(resource)){const{rid}=await routeList.getAlpha(resource);return rid;}throw _boom.default.notFound(_exception.NOT_FOUND);}