"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});var _exportNames={get:true,post:true,pre:true,state:true,alpha:true,omega:true,embark:true,debark:true,confirm:true};exports.get=get;exports.post=post;Object.defineProperty(exports,"alpha",{enumerable:true,get:function(){return _alpha2.default;}});Object.defineProperty(exports,"omega",{enumerable:true,get:function(){return _omega2.default;}});Object.defineProperty(exports,"embark",{enumerable:true,get:function(){return _embark2.default;}});Object.defineProperty(exports,"debark",{enumerable:true,get:function(){return _debark2.default;}});Object.defineProperty(exports,"confirm",{enumerable:true,get:function(){return _confirm2.default;}});exports.state=exports.pre=void 0;var _debug=_interopRequireDefault(require("debug"));var _stages=require("@modernpoacher/zashiki-transport/lib/stages");Object.keys(_stages).forEach(function(key){if(key==="default"||key==="__esModule")return;if(Object.prototype.hasOwnProperty.call(_exportNames,key))return;if(key in exports&&exports[key]===_stages[key])return;Object.defineProperty(exports,key,{enumerable:true,get:function(){return _stages[key];}});});var _exception=require("../common/exception");var _zid=_interopRequireDefault(require("../common/pre/zid"));var _rid=_interopRequireDefault(require("../common/pre/rid"));var _alpha2=_interopRequireDefault(require("./alpha"));var _omega2=_interopRequireDefault(require("./omega"));var _embark2=_interopRequireDefault(require("./embark"));var _debark2=_interopRequireDefault(require("./debark"));var _confirm2=_interopRequireDefault(require("./confirm"));const log=(0,_debug.default)('zashiki:stages');log('`stages` is awake');async function get({pre:{zid},params:resource={}}){try{log({zid,resource});await(0,_stages.change)({zid,resource});return(0,_stages.fetch)({zid,resource});}catch(e){(0,_exception.handleException)(e);}}async function post({pre:{zid,response},params:resource={}}){try{log({zid,resource});await(0,_stages.change)({zid,resource});return(0,_stages.store)({zid,resource,response});}catch(e){(0,_exception.handleException)(e);}}const pre=[_zid.default,_rid.default];exports.pre=pre;const state={parse:true,failAction:'error'};exports.state=state;